var mPlayer = function(f) {
		f = f || {};
		var c = function(a, b) {
				if (b) return a.getElementsByClassName(b)[0]
			},
			h = function(a) {
				if (a) return document.getElementById(a.replace(/#/, ""))
			}(f.container),
			d = c(h, "media-plugin") || c(h, f.video),
			g = c(h, "media-play-cotrolbar") || c(h, f.controlbar),
			v = f.source,
			B = f.replay || !1,
			C = f.width,
			w = f.title,
			D = f.autoplay || !1,
			E = f.keyEnabled,
			F = c(h, "media-play-title") || c(h, f.videoTitle),
			k = c(h, "media-play-mask") || c(h, f.videoMask),
			G = c(h, "media-play-maskBtn") || c(h, f.videoMaskBtn),
			l = c(g, "media-play-button"),
			p = c(g, "media-play-currentTime"),
			r = c(g, "media-play-durationTime"),
			H = c(g, "media-play-progressBar"),
			x = c(g, "media-play-progressTrack"),
			I = c(g, "media-play-volumeBar"),
			J = c(g, "media-play-volumeBtn"),
			y = c(g, "media-play-volumeTrack"),
			z = c(g, "media-play-fullScreen"),
			K = function() {
				d.ontimeupdate = function() {
					p.setAttribute("media-player-currentTime", this.currentTime);
					p.innerHTML = q(this.currentTime);
					x.style.width = 100 * this.currentTime / this.duration + "%";
					this.currentTime >= this.duration && (m(l, "play-state-start"), m(z, "play-full-Screen"), x.style.width = 0, p.innerHTML = q(0), this.duration = this.currentTime = 0, k.style.display = "block", t(), B ? (d.play(), n(l, "play-state-start"), k.style.display = "none") : d.pause())
				}
			},
			L = function(a) {
				document.onkeydown = function(a) {
					u(a);
					32 == a.keyCode && (d.paused ? (d.play(), n(l, "play-state-start"), k.style.display = "none") : (d.pause(), m(l, "play-state-start"), k.style.display = "block"));
					27 == a.keyCode && t()
				}
			},
			M = function() {
				H.onclick = function(a) {
					a = a || window.event;
					a = a.clientX;
					var b = this,
						e = 0;
					if (b.offsetParent) for (; b.offsetParent;) e += b.offsetLeft, b = b.offsetParent;
					else b.x && (e += b.x);
					d.currentTime = (a - e) / this.clientWidth * d.duration / 100 * 100
				}
			},
			N = function() {
				I.onclick = function(a) {
					u(a);
					a = a || window.event;
					var b = this.clientHeight,
						e = this,
						c = 0;
					if (e.offsetParent) for (; e.offsetParent;) c += e.offsetTop, e = e.offsetParent;
					else e.y && (c += e.y);
					a = (b + c - a.clientY) / this.clientHeight;
					d.volume = a;
					y.style.height = 100 * a + "%"
				}
			},
			O = function() {
				z.onclick = function() {
					this.className.match(/play-full-Screen/) ? (m(this, "play-full-Screen"), m(g, "media-play-cotrolbar-fill"), t()) : (n(this, "play-full-Screen"), n(g, "media-play-cotrolbar-fill"), d.requestFullscreen ? d.requestFullscreen() : d.mozRequestFullScreen ? d.mozRequestFullScreen() : d.webkitRequestFullScreen && d.webkitRequestFullScreen())
				}
			},
			t = function() {
				document.exitFullscreen ? document.exitFullscreen() : document.mozExitFullScreen ? document.mozExitFullScreen() : document.webkitExitFullscreen && document.webkitExitFullscreen()
			},
			u = function(a) {
				a && a.stopPropagation ? a.stopPropagation() : window.event.cancelBubble = !0
			},
			A = function(a) {
				var b = "";
				if (10 > a || 0 == a) b += 0;
				return b + a
			},
			q = function(a) {
				a = parseInt(a);
				var b = "",
					c = 0,
					d = 0; - 1 != a && (c = Math.floor(a / 60) % 60, d = Math.floor(a % 60), b += A(c) + ":", b += A(d));
				return b
			},
			n = function(a, b) {
				!a || !b || a.className && -1 != a.className.search(new RegExp("\\b" + b + "\\b")) || (a.className += (a.className ? " " : "") + b)
			},
			m = function(a, b) {
				!a || !b || a.className && -1 == a.className.search(new RegExp("\\b" + b + "\\b")) || (a.className = a.className.replace(new RegExp("\\s*\\b" + b + "\\b", "g"), ""))
			};
		(function() {
			p.innerHTML = "00:00";
			r.innerHTML = "00:00";
			d.style.cssText = "width:100%;height:100%";
			h.style.width = C + "px";
			F.innerHTML = w ? w : "undefined";
			var a = document.createElement("div");
			a.className = "media-play-erro";
			a.innerHTML = "( \u2299 o \u2299 )\u554a\uff01..\u89c6\u9891\u65e0\u6cd5\u64ad\u653e\u4e86";
			if (v) {
				D && (d.setAttribute("autoplay", !0), n(l, "play-state-start"), k.style.display = "none");
				var b = c(g, "media-play-volumeInner"),
					e = !0,
					a = document.createElement("source");
				a.src = v;
				a.setAttribute("data-source-type", "mp4/mkv");
				y.style.height = "35%";
				d.volume = .3;
				d.appendChild(a);
				d.onloadedmetadata = function() {
					p.setAttribute("media-player-currentTime", 0);
					r.setAttribute("media-player-durationTime", this.duration);
					r.innerHTML = q(this.duration);
					p.innerHTML = q(0)
				};
				l.onclick = function() {
					d.paused ? (d.play(), n(this, "play-state-start"), k.style.display = "none") : (d.pause(), m(this, "play-state-start"), k.style.display = "block")
				};
				G.onclick = function() {
					d.play();
					k.style.display = "none";
					n(l, "play-state-start")
				};
				d.onclick = function() {
					d.pause();
					m(l, "play-state-start");
					k.style.display = "block"
				};
				J.onclick = function() {
					u(f);
					e ? (b.style.display = "block", e = !1) : (b.style.display = "none", e = !0);
					document.onclick = function(a) {
						b.style.display = "none";
						e = !0
					}
				};
				E && L();
				K();
				N();
				M();
				O()
			} else k.innerHTML = "", k.appendChild(a)
		})()
	};